# --Game-- 8/14/2022 3:58:39 PM

$$CRYSTAL_GUID:"be4013ba-3664-4b27-903d-830afdd9c2c9"

# Not currently used
#$spore_Payload:300

once
	false ->testMode

	false ->pauseModeChosen
	true ->pauseMode
	
	false ->mverseStarted
	
	#<-spore_Payload ->*SPORE_PAYLOAD

	CreateList ->activeSpores
	
	SetMissionObjectiveEnabled(5 true)
	SetMissionObjectiveRequired(5 true)
	SetCustomObjectiveText("Destroy Enemy Crystal")

	ShowGameMessage("display" "" "" false null)
	SetGameMessageText(0 "Two players are required to start.")

	RegisterForMsg("SetPauseMode" dup)
	RegisterForMsg("MverseStarted" dup)
	RegisterForMsg("SpawnCreeperUnit" dup)
	RegisterForMsg("CreateSpores" dup)
	RegisterForMsg("SpawnCreeper" dup)
	RegisterForMsg("UpdateUnitSettings" dup)
	RegisterForMsg("Defeated" "OnVictory")
	RegisterForMsg("MSG_FrameAdvance" "FrameAdvance")
endonce

if (<-mverseStarted ! GetMversePlayerNum gt0 &&)
	true ->mverseStarted
	SendMverseMsg("MverseStarted" null)
	
	@MverseStarted
endif

if (<-testMode) return endif

#if (GetMversePlayerNum -1 ==)
#	ShowGameMessage("singleplayer" "" "" false null)
#	SetPause(true)
#	return
#endif

#if (<-mverseStarted <-pauseModeChosen &&)
	@GameLoop
#else
#	SetPause(true)
#endif

:GameLoop
	#if (<-pauseMode !)
	#	SetPause(false)
	#endif
	
	if (GetGameUpdateCount eq0) return endif

	# Scale creeper enemies with Creeper++
	if (GetGameUpdateCount <-*CPP_INTERVAL % eq0)
	
		GetUnits("sporelauncher" Vector0 512 false false false 0 0 0) ->spLaunchers
		GetUnits("blobnest" Vector0 512 false false false 0 0 0) ->blobNests
		GetListCount(<-spLaunchers) 0 do
			CreateTable ->params
			GetGameUpdateCount <-*CPP_INTERVAL / 1 + <-*CPP_INCREASE * ->params{"Count"}
			SetUnitSettings(<-spLaunchers[i] <-params)
		loop

		GetListCount(<-blobNests) 0 do
			CreateTable ->params
			GetGameUpdateCount <-*CPP_INTERVAL / 1 + <-*CPP_INCREASE * ->params{"Count"}
			SetUnitSettings(<-blobNests[i] <-params)
		loop
	endif
	
	if (GetGameUpdateCount <-*LAUNCHER_RETARGET_INTERVAL % eq0)
		GetUnits("sporelauncher" <-*middlePosition <-quarterX true false false 0 0 0) ->spLaunchers
		GetUnits("blobnest" <-*middlePosition <-quarterX true false false 0 0 0) ->blobNests
		
		GetUnitsInRange(<-*middlePosition <-quarterX true false false 2 0 1) ->friendlyUnits
		
		GetListCount(<-spLaunchers) 0 do
			RandInt(0 <-friendlyUnits) ->chosenUnit
			GetUnitPosition(<-friendlyUnits[<-chosenUnit]) ->friendlyUnitPosition
			
			CreateTable ->launcherParams
			V2(<-friendlyUnitPosition.x <-friendlyUnitPosition.z) ->launcherParams{"TargetLocation"}
			
			if (GetMversePlayerNum eq0)
				printallsp("HOST" <-spLaunchers[i] <-launcherParams)
				SetUnitSettings(<-spLaunchers[i] <-launcherParams)
			else
				Table("unitAt" GetUnitPosition(<-spLaunchers[i]) "settings" <-launcherParams) ->launcherData
				SendMverseMsg("UpdateUnitSettings" <-launcherData)
			endif
		loop
		
		GetListCount(<-blobNests) 0 do
			RandInt(0 <-friendlyUnits) ->chosenUnit
			GetUnitPosition(<-friendlyUnits[<-chosenUnit]) ->friendlyUnitPosition
			
			CreateTable ->launcherParams
			V2(<-friendlyUnitPosition.x <-friendlyUnitPosition.z) ->launcherParams{"TargetLocation"}
			
			if (GetMversePlayerNum eq0)
				SetUnitSettings(<-blobNests[i] <-launcherParams)
			else
				Table("unitAt" GetUnitPosition(<-blobNests[i]) "settings" <-launcherParams) ->launcherData
				SendMverseMsg("UpdateUnitSettings" <-launcherData)
			endif
		loop
	endif
	
	# Requires https://github.com/KnuckleCracker/CW4-bug-tracker/issues/1063 to work properly
	if (false)#GetListCount(<-activeSpores) neq0)
		GetUnits("spore" Vector0 512 true false false 0 0 0) ->currentSpores
		<-currentSpores 0 do
			GetUnitPosition(<-currentSpores[i])
		loop List ->currentSporePositions
		
		GetListCount(<-activeSpores) 0 do
			if (ListContains(<-currentSpores <-activeSpores[i]) !)
				# Only the host automatically syncs creeper
				if (GetMversePlayerNum neq0)
					Table("position" <-activeSporePositions[i] "amount" <-*SPORE_PAYLOAD) ->creeperData
					SendMverseMsg("SpawnCreeper" <-creeperData)
				endif
			endif
		loop
		
		<-currentSpores ->activeSpores
		<-currentSporePositions ->activeSporePositions
	endif

:SetPauseMode
	<-_DATA ! ->pauseMode
	true ->pauseModeChosen
	
	CloseGameMessage(false)
	
	if (GetMversePlayerNum eq0)
		SendMverseMsg("SetPauseMode" <-_DATA)
	endif

:MverseStarted
	true ->mverseStarted

	CloseGameMessage(false)

	@PreventEnemyBuilding

	if (GetMversePlayerNum eq0)
		V3(<-halfX 2 / 0 <-sizeZ 2 /) ->*middlePosition
	
		#ShowGameMessage("startP1" "Allow Pause" "Disallow Pause" false "SetPauseMode")
		CreateUnit(<-CRYSTAL_GUID <-*leftCrystalPos null) pop
		CreateUnit("ern" <-*leftCrystalPos null) pop
	else
		V3(<-halfX 1.5 * 0 <-sizeZ 2 /) ->*middlePosition
	
		#ShowGameMessage("startP2" "" "" false null)
		CreateUnit(<-CRYSTAL_GUID <-*rightCrystalPos null) pop
		CreateUnit("ern" <-*rightCrystalPos null) pop
		
		# ADA log doesn't show to mverse clients by default
		SetADALogOpen(true)
	endif

:UpdateUnitSettings
	GetUnits("" <-_DATA{"unitAt"} 3 true true false 0 0 0)[0] ->unit
	
	printallsp("CLIENT" <-unit <-_DATA)
	SetUnitSettings(<-unit <-_DATA{"settings"})

:CreateSpores
	GetListCount(<-_DATA{"targets"}) 0 do
		Table("Target" 2 "TargetLocation" <-_DATA{"targets"}[i] "Payload" <-*SPORE_PAYLOAD) ->params
		if (GetMversePlayerNum eq0) V3(64 128 64) else V3(192 128 64) endif ->sporePos
		AppendToList(<-activeSpores CreateUnit("spore" <-sporePos <-params))
	loop
	
	PlaySoundAtPosition("SporeLaunch" 1 <-_DATA{"source"})

:SpawnCreeper
	<-_DATA{"position"} ->pos
	AddCreeper(<-pos.x <-pos.z <-_DATA{"amount"})

:SpawnCreeperUnit
	CreateUnit(<-_DATA{"unit"} <-_DATA{"position"} <-_DATA{"unitParams"}) pop
	
	PlaySoundAtPosition("Warning2" 1 <-_DATA{"position"})

# Prevent building on enemy land
# Thanks to Grabz for suggesting this as a solution
:PreventEnemyBuilding
	if (GetMversePlayerNum eq0)
		<-sizeZ 0 do
			<-sizeX <-halfX do
				SetCellOccupiedCount(i j 1000000)
			loop
		loop
	else
		<-sizeZ 0 do
			<-halfX 0 do
				SetCellOccupiedCount(i j 1000000)
			loop
		loop
	endif

:OnVictory
	AcquireMissionObjective(5 true)

:FrameAdvance
	if (GetMversePlayerNum -1 ==) return endif

	GetSelectedUnits ->selectedUnits
	if (GetListCount(<-selectedUnits) gt0)
		if (GetMversePlayerNum eq0)
			GetListCount(<-selectedUnits) 0 do
				GetUnitPosition(<-selectedUnits[i]) ->position
				if (<-position.x <-halfX >)
					SetUnitSelected(<-selectedUnits[i] false)
				endif
			loop
		else
			GetListCount(<-selectedUnits) 0 do
				GetUnitPosition(<-selectedUnits[i]) ->position
				if (<-position.x <-halfX <)
					SetUnitSelected(<-selectedUnits[i] false)
				endif
			loop
		endif
	endif

:GameLoaded
	GetMapSize ->sizeZ ->sizeX
	<-sizeX 2 / ->halfX
	<-sizeX 4 / ->quarterX

	if (GetMversePlayerNum -1 ==)
		false ->mverseStarted
	else
		# Resets on game load so redo here
		@PreventEnemyBuilding
	endif
